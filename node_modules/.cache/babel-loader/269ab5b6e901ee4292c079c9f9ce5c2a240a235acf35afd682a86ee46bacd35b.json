{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandradjordjevic/Documents/ananas/posts-and-comments/src/Card.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostList = () => {\n  _s();\n  const [data, setData] = useState();\n  useEffect(() => {\n    // fetch data\n    const dataFetch = async () => {\n      const data = await (await fetch(\"https://run.mocky.io/v3/d6155d63-938f-484c-8d87-6f918f126cd4\")).json();\n\n      // set state when the data received\n      setData(data);\n    };\n    dataFetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    postList: [{\n      id: 1\n    }, {\n      id: 2\n    }]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n};\n_s(PostList, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n_c = PostList;\nexport const Layout = ({\n  postList\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"container\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"row row-cols-1 row-cols-sm-2 row-cols-lg-4 \",\n    children: postList.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"col\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this);\n_c2 = Layout;\nexport const Card = ({\n  post\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: post.id\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 35\n}, this);\n_c3 = Card;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PostList\");\n$RefreshReg$(_c2, \"Layout\");\n$RefreshReg$(_c3, \"Card\");","map":{"version":3,"names":["PostList","_s","data","setData","useState","useEffect","dataFetch","fetch","json","_jsxDEV","Layout","postList","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","className","children","class","map","post","Card","_c2","_c3","$RefreshReg$"],"sources":["/Users/aleksandradjordjevic/Documents/ananas/posts-and-comments/src/Card.js"],"sourcesContent":["export const PostList = () => {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    // fetch data\n    const dataFetch = async () => {\n      const data = await (\n        await fetch(\n          \"https://run.mocky.io/v3/d6155d63-938f-484c-8d87-6f918f126cd4\"\n        )\n      ).json();\n\n      // set state when the data received\n      setData(data);\n    };\n\n    dataFetch();\n  }, []);\n  return <Layout postList={[{ id: 1 }, { id: 2 }]} />;\n};\n\nexport const Layout = ({ postList }) => (\n  <div className=\"container\">\n    <div class=\"row row-cols-1 row-cols-sm-2 row-cols-lg-4 \">\n      {postList.map((post) => (\n        <div class=\"col\">\n          <Card post={post} />\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nexport const Card = ({ post }) => <div>{post.id}</div>;\n"],"mappings":";;;AAAA,OAAO,MAAMA,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,CAAC;EAElCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMJ,IAAI,GAAG,MAAM,CACjB,MAAMK,KAAK,CACT,8DACF,CAAC,EACDC,IAAI,CAAC,CAAC;;MAER;MACAL,OAAO,CAACD,IAAI,CAAC;IACf,CAAC;IAEDI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN,oBAAOG,OAAA,CAACC,MAAM;IAACC,QAAQ,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,EAAE;MAAEA,EAAE,EAAE;IAAE,CAAC;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrD,CAAC;AAACf,EAAA,CAnBWD,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AAqBrB,OAAO,MAAMU,MAAM,GAAGA,CAAC;EAAEC;AAAS,CAAC,kBACjCF,OAAA;EAAKS,SAAS,EAAC,WAAW;EAAAC,QAAA,eACxBV,OAAA;IAAKW,KAAK,EAAC,6CAA6C;IAAAD,QAAA,EACrDR,QAAQ,CAACU,GAAG,CAAEC,IAAI,iBACjBb,OAAA;MAAKW,KAAK,EAAC,KAAK;MAAAD,QAAA,eACdV,OAAA,CAACc,IAAI;QAACD,IAAI,EAAEA;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACN;AAACQ,GAAA,GAVWd,MAAM;AAYnB,OAAO,MAAMa,IAAI,GAAGA,CAAC;EAAED;AAAK,CAAC,kBAAKb,OAAA;EAAAU,QAAA,EAAMG,IAAI,CAACV;AAAE;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAM,CAAC;AAACS,GAAA,GAA1CF,IAAI;AAAA,IAAAN,EAAA,EAAAO,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}