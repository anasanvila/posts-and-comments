{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandradjordjevic/Documents/ananas/posts-and-comments/src/organisms/Card.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\n// const Card = ({ post }) => (\n//   <div className=\"card p-3 mt-3 fs-6 text-start h-100\" key={post.id}>\n//     <div className=\"card-header\">\n//       <h6>\n//         <span className=\"badge border border-success text-success \">\n//           User: {post.userId}\n//         </span>\n//       </h6>\n//       <h5 className=\"card-title cap\">{post.title}</h5>\n//     </div>\n//     <div className=\"card-body\">\n//       <p className=\"card-text cap\">{post.body}</p>\n//     </div>\n//     <div className=\"card-footer\">\n//       <a href=\"#\" className=\"btn btn-success\">\n//         See more...\n//       </a>\n//     </div>\n//   </div>\n// );\n\nimport React, { cloneElement, createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LIMIT = 3;\nconst CardContext = /*#__PURE__*/createContext();\nconst Card = ({\n  children\n}) => {\n  _s();\n  const [isCollapsed, setIsCollapsed] = useState(true);\n  const expand = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n  const collapse = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n  const value = {\n    isCollapsed,\n    expand,\n    collapse\n  };\n  return /*#__PURE__*/_jsxDEV(CardContext.Provider, {\n    value: value,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"dVskpeWS3kgv81sO7C75cVYWMrM=\");\n_c = Card;\nconst CardContent = ({\n  children\n}) => {\n  _s2();\n  const {\n    isCollapsed\n  } = useContext(CardContext);\n  return children.map((child, index) => {\n    if (isCollapsed) {\n      while (LIMIT > index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: child\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: child\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this);\n    }\n  });\n};\n_s2(CardContent, \"W2li5yjlMgGRgKd5Qe7S6v3uSkw=\");\n_c2 = CardContent;\nconst Expand = ({\n  children\n}) => {\n  _s3();\n  const {\n    expand,\n    isCollapsed\n  } = useContext(CardContext);\n  return isCollapsed && /*#__PURE__*/cloneElement(children, {\n    onClick: expand\n  });\n};\n_s3(Expand, \"0MmzD0fSdn/6KeqfSurtfgPIpZ8=\");\n_c3 = Expand;\nconst Collapse = ({\n  children\n}) => {\n  _s4();\n  const {\n    collapse,\n    isCollapsed\n  } = useContext(CardContext);\n  return !isCollapsed && /*#__PURE__*/cloneElement(children, {\n    onClick: collapse\n  });\n};\n_s4(Collapse, \"Xzm7fr3N9aMLJqof3dUiJkwMhh4=\");\n_c4 = Collapse;\nCard.CardContent = CardContent;\nCard.Expand = Expand;\nCard.Collapse = Collapse;\nexport default Card;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"CardContent\");\n$RefreshReg$(_c3, \"Expand\");\n$RefreshReg$(_c4, \"Collapse\");","map":{"version":3,"names":["React","cloneElement","createContext","useContext","useState","jsxDEV","_jsxDEV","LIMIT","CardContext","Card","children","_s","isCollapsed","setIsCollapsed","expand","collapse","value","Provider","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","CardContent","_s2","map","child","index","_c2","Expand","_s3","onClick","_c3","Collapse","_s4","_c4","$RefreshReg$"],"sources":["/Users/aleksandradjordjevic/Documents/ananas/posts-and-comments/src/organisms/Card.js"],"sourcesContent":["// const Card = ({ post }) => (\n//   <div className=\"card p-3 mt-3 fs-6 text-start h-100\" key={post.id}>\n//     <div className=\"card-header\">\n//       <h6>\n//         <span className=\"badge border border-success text-success \">\n//           User: {post.userId}\n//         </span>\n//       </h6>\n//       <h5 className=\"card-title cap\">{post.title}</h5>\n//     </div>\n//     <div className=\"card-body\">\n//       <p className=\"card-text cap\">{post.body}</p>\n//     </div>\n//     <div className=\"card-footer\">\n//       <a href=\"#\" className=\"btn btn-success\">\n//         See more...\n//       </a>\n//     </div>\n//   </div>\n// );\n\nimport React, {\n  cloneElement,\n  createContext,\n  useContext,\n  useState,\n} from \"react\";\n\nconst LIMIT = 3;\n\nconst CardContext = createContext();\n\nconst Card = ({ children }) => {\n  const [isCollapsed, setIsCollapsed] = useState(true);\n\n  const expand = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n\n  const collapse = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n\n  const value = { isCollapsed, expand, collapse };\n  return (\n    <CardContext.Provider value={value}>\n      <div className=\"card\">{children}</div>\n    </CardContext.Provider>\n  );\n};\n\nconst CardContent = ({ children }) => {\n  const { isCollapsed } = useContext(CardContext);\n  return children.map((child, index) => {\n    if (isCollapsed) {\n      while (LIMIT > index) {\n        return <div key={index}>{child}</div>;\n      }\n    } else {\n      return <div key={index}>{child}</div>;\n    }\n  });\n};\n\nconst Expand = ({ children }) => {\n  const { expand, isCollapsed } = useContext(CardContext);\n  return isCollapsed && cloneElement(children, { onClick: expand });\n};\n\nconst Collapse = ({ children }) => {\n  const { collapse, isCollapsed } = useContext(CardContext);\n  return !isCollapsed && cloneElement(children, { onClick: collapse });\n};\n\nCard.CardContent = CardContent;\nCard.Expand = Expand;\nCard.Collapse = Collapse;\n\nexport default Card;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}