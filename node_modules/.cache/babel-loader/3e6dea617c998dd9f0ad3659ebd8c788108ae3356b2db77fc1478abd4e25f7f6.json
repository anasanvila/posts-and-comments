{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandradjordjevic/Documents/ananas/posts-and-comments/src/App.js\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport RootLayout from \"./layouts/RootLayout\";\nimport ErrorPage from \"pages/ErrorPage\";\nimport Post, { postLoader } from \"pages/Post\";\nimport PostList from \"./pages/PostList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    path: \"posts\",\n    element: /*#__PURE__*/_jsxDEV(PostList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 18\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 23\n    }, this),\n    loader: async () => {\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n      if (!response) {\n        throw new Response(JSON.stringify({\n          message: \"Could not fetch\"\n        }), {\n          status: 500\n        });\n      } else {\n        const resData = await response.json();\n        return resData;\n      }\n    }\n  }, {\n    path: \"post/:id\",\n    element: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 18\n    }, this),\n    loader: postLoader\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RootLayout","ErrorPage","Post","postLoader","PostList","jsxDEV","_jsxDEV","router","createBrowserRouter","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","loader","response","fetch","Response","JSON","stringify","message","status","resData","json","App","RouterProvider","_c","$RefreshReg$"],"sources":["/Users/aleksandradjordjevic/Documents/ananas/posts-and-comments/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport RootLayout from \"./layouts/RootLayout\";\nimport ErrorPage from \"pages/ErrorPage\";\nimport Post, { postLoader } from \"pages/Post\";\nimport PostList from \"./pages/PostList\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      {\n        index: true,\n        path: \"posts\",\n        element: <PostList />,\n        errorElement: <ErrorPage />,\n        loader: async () => {\n          const response = await fetch(\n            \"https://jsonplaceholder.typicode.com/posts\"\n          );\n          if (!response) {\n            throw new Response(JSON.stringify({ message: \"Could not fetch\" }), {\n              status: 500,\n            });\n          } else {\n            const resData = await response.json();\n            return resData;\n          }\n        },\n      },\n      {\n        path: \"post/:id\",\n        element: <Post />,\n        loader: postLoader,\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAC7C,OAAO,wCAAwC;AAC/C,OAAOA,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,IAAI,IAAIC,UAAU,QAAQ,YAAY;AAC7C,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGC,mBAAmB,CAAC,CACjC;EACEC,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEJ,OAAA,CAACN,UAAU;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,YAAY,eAAET,OAAA,CAACL,SAAS;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC3BE,QAAQ,EAAE,CACR;IACEC,KAAK,EAAE,IAAI;IACXR,IAAI,EAAE,OAAO;IACbC,OAAO,eAAEJ,OAAA,CAACF,QAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACrBC,YAAY,eAAET,OAAA,CAACL,SAAS;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC3BI,MAAM,EAAE,MAAAA,CAAA,KAAY;MAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4CACF,CAAC;MACD,IAAI,CAACD,QAAQ,EAAE;QACb,MAAM,IAAIE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAE;QAAkB,CAAC,CAAC,EAAE;UACjEC,MAAM,EAAE;QACV,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,MAAMC,OAAO,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QACrC,OAAOD,OAAO;MAChB;IACF;EACF,CAAC,EACD;IACEjB,IAAI,EAAE,UAAU;IAChBC,OAAO,eAAEJ,OAAA,CAACJ,IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACjBI,MAAM,EAAEf;EACV,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASyB,GAAGA,CAAA,EAAG;EACb,oBAAOtB,OAAA,CAACuB,cAAc;IAACtB,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACgB,EAAA,GAFQF,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}