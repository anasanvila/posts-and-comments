{"ast":null,"code":"import Card from\"../organisms/Card\";import{useParams,useLoaderData}from\"react-router-dom\";import{useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const CardItem=_ref=>{let{item,text}=_ref;useEffect(()=>text(\"CardItem\"));console.log(\"item \",item);return/*#__PURE__*/_jsx(\"div\",{children:item.id});};const PostDetail=_ref2=>{let{text}=_ref2;const data=useLoaderData();return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Card,{post:data,detail:true,text:text})});};export default PostDetail;export async function postLoader(_ref3){let{request,params}=_ref3;console.log(\"params=\",params);const id=params.id;const response=await fetch(\"https://jsonplaceholder.typicode.com/posts/\".concat(id));if(!response){throw new Response(JSON.stringify({message:\"Could not fetch\"}),{status:500});}else{const resData=await response.json();return resData;}}","map":{"version":3,"names":["Card","useParams","useLoaderData","useEffect","jsx","_jsx","CardItem","_ref","item","text","console","log","children","id","PostDetail","_ref2","data","post","detail","postLoader","_ref3","request","params","response","fetch","concat","Response","JSON","stringify","message","status","resData","json"],"sources":["/Users/aleksandradjordjevic/Documents/ananas/posts-and-comments/src/pages/PostDetail.js"],"sourcesContent":["import Card from \"../organisms/Card\";\nimport { useParams, useLoaderData } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nconst CardItem = ({ item, text }) => {\n  useEffect(() => text(\"CardItem\"));\n  console.log(\"item \", item);\n  return <div>{item.id}</div>;\n};\n\nconst PostDetail = ({ text }) => {\n  const data = useLoaderData();\n  return (\n    <div>\n      {/* <Card>\n          <Card.CardContent>\n            {post.map((item, index) => {\n              return <CardItem key={index} item={item} />;\n            })}\n          </Card.CardContent>\n\n          <Card.Expand>\n            <div>show more</div>\n          </Card.Expand>\n\n          <Card.Collapse>\n            <div>show less</div>\n          </Card.Collapse>\n        </Card> */}\n      <Card post={data} detail={true} text={text} />\n    </div>\n  );\n};\nexport default PostDetail;\n\nexport async function postLoader({ request, params }) {\n  console.log(\"params=\", params);\n  const id = params.id;\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/posts/${id}`\n  );\n  if (!response) {\n    throw new Response(JSON.stringify({ message: \"Could not fetch\" }), {\n      status: 500,\n    });\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n}\n"],"mappings":"AAAA,MAAO,CAAAA,IAAI,KAAM,mBAAmB,CACpC,OAASC,SAAS,CAAEC,aAAa,KAAQ,kBAAkB,CAC3D,OAASC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElC,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAoB,IAAnB,CAAEC,IAAI,CAAEC,IAAK,CAAC,CAAAF,IAAA,CAC9BJ,SAAS,CAAC,IAAMM,IAAI,CAAC,UAAU,CAAC,CAAC,CACjCC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAEH,IAAI,CAAC,CAC1B,mBAAOH,IAAA,QAAAO,QAAA,CAAMJ,IAAI,CAACK,EAAE,CAAM,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGC,KAAA,EAAc,IAAb,CAAEN,IAAK,CAAC,CAAAM,KAAA,CAC1B,KAAM,CAAAC,IAAI,CAAGd,aAAa,CAAC,CAAC,CAC5B,mBACEG,IAAA,QAAAO,QAAA,cAgBEP,IAAA,CAACL,IAAI,EAACiB,IAAI,CAAED,IAAK,CAACE,MAAM,CAAE,IAAK,CAACT,IAAI,CAAEA,IAAK,CAAE,CAAC,CAC3C,CAAC,CAEV,CAAC,CACD,cAAe,CAAAK,UAAU,CAEzB,MAAO,eAAe,CAAAK,UAAUA,CAAAC,KAAA,CAAsB,IAArB,CAAEC,OAAO,CAAEC,MAAO,CAAC,CAAAF,KAAA,CAClDV,OAAO,CAACC,GAAG,CAAC,SAAS,CAAEW,MAAM,CAAC,CAC9B,KAAM,CAAAT,EAAE,CAAGS,MAAM,CAACT,EAAE,CACpB,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAC,KAAK,+CAAAC,MAAA,CACoBZ,EAAE,CAClD,CAAC,CACD,GAAI,CAACU,QAAQ,CAAE,CACb,KAAM,IAAI,CAAAG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC,CAAEC,OAAO,CAAE,iBAAkB,CAAC,CAAC,CAAE,CACjEC,MAAM,CAAE,GACV,CAAC,CAAC,CACJ,CAAC,IAAM,CACL,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CACrC,MAAO,CAAAD,OAAO,CAChB,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}