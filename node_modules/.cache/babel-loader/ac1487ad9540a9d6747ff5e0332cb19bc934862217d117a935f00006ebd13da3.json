{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandradjordjevic/Documents/ananas/posts-and-comments/src/pages/PostDetail.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport Card from \"../organisms/Card\";\nimport { useParams, useLoaderData } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardItem = ({\n  item,\n  text\n}) => {\n  _s();\n  useEffect(() => text(\"CardItem\"));\n  console.log(\"item \", item);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: item.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n_s(CardItem, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CardItem;\nconst PostDetail = ({\n  text\n}) => {\n  _s2();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      post: data,\n      detail: true,\n      text: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s2(PostDetail, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c2 = PostDetail;\nexport default PostDetail;\nexport async function postLoader({\n  request,\n  params\n}) {\n  console.log(\"params=\", params);\n  const id = params.id;\n  const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`);\n  if (!response) {\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch\"\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"CardItem\");\n$RefreshReg$(_c2, \"PostDetail\");","map":{"version":3,"names":["Card","useParams","useLoaderData","useEffect","jsxDEV","_jsxDEV","CardItem","item","text","_s","console","log","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","PostDetail","_s2","data","post","detail","_c2","postLoader","request","params","response","fetch","Response","JSON","stringify","message","status","resData","json","$RefreshReg$"],"sources":["/Users/aleksandradjordjevic/Documents/ananas/posts-and-comments/src/pages/PostDetail.js"],"sourcesContent":["import Card from \"../organisms/Card\";\nimport { useParams, useLoaderData } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nconst CardItem = ({ item, text }) => {\n  useEffect(() => text(\"CardItem\"));\n  console.log(\"item \", item);\n  return <div>{item.id}</div>;\n};\n\nconst PostDetail = ({ text }) => {\n  const data = useLoaderData();\n  return (\n    <div>\n      {/* <Card>\n          <Card.CardContent>\n            {post.map((item, index) => {\n              return <CardItem key={index} item={item} />;\n            })}\n          </Card.CardContent>\n\n          <Card.Expand>\n            <div>show more</div>\n          </Card.Expand>\n\n          <Card.Collapse>\n            <div>show less</div>\n          </Card.Collapse>\n        </Card> */}\n      <Card post={data} detail={true} text={text} />\n    </div>\n  );\n};\nexport default PostDetail;\n\nexport async function postLoader({ request, params }) {\n  console.log(\"params=\", params);\n  const id = params.id;\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/posts/${id}`\n  );\n  if (!response) {\n    throw new Response(JSON.stringify({ message: \"Could not fetch\" }), {\n      status: 500,\n    });\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,IAAI,MAAM,mBAAmB;AACpC,SAASC,SAAS,EAAEC,aAAa,QAAQ,kBAAkB;AAC3D,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACnCN,SAAS,CAAC,MAAMK,IAAI,CAAC,UAAU,CAAC,CAAC;EACjCE,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEJ,IAAI,CAAC;EAC1B,oBAAOF,OAAA;IAAAO,QAAA,EAAML,IAAI,CAACM;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC7B,CAAC;AAACR,EAAA,CAJIH,QAAQ;AAAAY,EAAA,GAARZ,QAAQ;AAMd,MAAMa,UAAU,GAAGA,CAAC;EAAEX;AAAK,CAAC,KAAK;EAAAY,GAAA;EAC/B,MAAMC,IAAI,GAAGnB,aAAa,CAAC,CAAC;EAC5B,oBACEG,OAAA;IAAAO,QAAA,eAgBEP,OAAA,CAACL,IAAI;MAACsB,IAAI,EAAED,IAAK;MAACE,MAAM,EAAE,IAAK;MAACf,IAAI,EAAEA;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACG,GAAA,CAtBID,UAAU;EAAA,QACDjB,aAAa;AAAA;AAAAsB,GAAA,GADtBL,UAAU;AAuBhB,eAAeA,UAAU;AAEzB,OAAO,eAAeM,UAAUA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EACpDjB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEgB,MAAM,CAAC;EAC9B,MAAMd,EAAE,GAAGc,MAAM,CAACd,EAAE;EACpB,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CACzB,8CAA6ChB,EAAG,EACnD,CAAC;EACD,IAAI,CAACe,QAAQ,EAAE;IACb,MAAM,IAAIE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAkB,CAAC,CAAC,EAAE;MACjEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO;EAChB;AACF;AAAC,IAAAjB,EAAA,EAAAM,GAAA;AAAAa,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAb,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}